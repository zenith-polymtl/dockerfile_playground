#!/usr/bin/env bash
set -euo pipefail

# 1) D√©tection de l‚Äôutilisateur ¬´ humain ¬ª si on passe par sudo
if [ "$EUID" -ne 0 ]; then
  if command -v sudo &>/dev/null; then
    SUDO="sudo"
    TARGET_USER="${SUDO_USER:-$USER}"
  else
    echo "‚õî Ce script n√©cessite sudo ou d‚Äô√™tre root."
    exit 1
  fi
else
  SUDO=""
  TARGET_USER="$USER"
fi

# 2) Installation de Docker si n√©cessaire
if ! command -v docker &>/dev/null; then
  echo "‚öôÔ∏è  Docker non trouv√©. Installation en cours‚Ä¶"
  curl -fsSL https://get.docker.com | $SUDO sh
  echo "‚úî Docker install√© : $(docker --version)"
  echo "‚ûï Ajout de '$TARGET_USER' au groupe docker‚Ä¶"
  $SUDO usermod -aG docker "$TARGET_USER"
  NEED_REFRESH_GROUP=true
else
  echo "‚úî Docker d√©j√† pr√©sent : $(docker --version)"
  NEED_REFRESH_GROUP=false
fi

# 3) Lancement de docker compose up --build
echo
if id -nG "$TARGET_USER" | grep -qw docker && [ "$NEED_REFRESH_GROUP" = false ]; then
  # l‚Äôutilisateur est d√©j√† membre du groupe‚ÄØ: appel direct
  echo "üöÄ Lancement direct de 'docker compose up --build'‚Ä¶"
  docker compose up --build
else
  # on profite de sg pour cette invocation seule
  echo "üîÑ Lancement de 'docker compose up --build' via sg docker pour la session courante‚Ä¶"
  sg docker -c "docker compose up --build"
  echo
  echo "‚ÑπÔ∏è  Pour les prochaines sessions, d√©connectez-vous/reconnectez-vous ou ex√©cutez 'newgrp docker'."
fi
